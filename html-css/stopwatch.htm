<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Countdown Timer</title>
<style>
  body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f5f5f5;
    margin: 0;
  }
  .timer-container {
    position: relative;
    width: 200px;
    height: 200px;
  }
  .timer {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
  }
  .progress-ring {
    position: absolute;
    width: 100%;
    height: 100%;
    clip: rect(0, 100px, 100px, 50px);
  }
  .progress-circle {
    fill: none;
    stroke: #4CAF50;
    stroke-width: 10;
    stroke-linecap: round;
    stroke-dasharray: 314;
    transition: stroke-dashoffset 1s linear;
  }
</style>
</head>
<body>
<div class="timer-container">
  <svg class="progress-ring" width="200" height="200">
    <circle class="progress-circle" cx="100" cy="100" r="90"></circle>
  </svg>
  <div class="timer" id="timer">10:00</div>
</div>

<script>
const timerElement = document.getElementById('timer');
const circle = document.querySelector('.progress-circle');
let timeLeft = 60; // 10 minutes in seconds

function updateTimer() {
  const minutes = Math.floor(timeLeft / 60);
  const seconds = timeLeft % 60;
  const displayTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  timerElement.textContent = displayTime;

  const circumference = 2 * Math.PI * 90;
  const offset = circumference * (1 - timeLeft / 600);
  circle.style.strokeDashoffset = offset;

  if (timeLeft === 0) {
    clearInterval(timerInterval);
    alert('Time is up!');
  } else {
    timeLeft--;
  }
}

updateTimer(); // Initial call

const timerInterval = setInterval(updateTimer, 1000);
</script>
</body>
</html>
